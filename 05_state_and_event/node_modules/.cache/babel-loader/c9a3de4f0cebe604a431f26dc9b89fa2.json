{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/hagi/ProgramingProject/TypeScriptProjects/react-guide-material/05_state_and_event/src/090_practice_state_props/start/Example.js\";\nvar Example = function Example() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  }, \"\\u7DF4\\u7FD2\\u554F\\u984C\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, \"\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u66F4\\u65B0\\uFF08CountUpdate\\uFF09\\u3068\\u8868\\u793A\\uFF08CountResult\\uFF09\\u3092\\u5225\\u306E\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306B\\u5206\\u96E2\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002Example\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u5185\\u3067\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u5024\\u3092\\u7BA1\\u7406\\u3059\\u308Bstate\\u3092\\u4E00\\u3064\\u5B9A\\u7FA9\\u3057\\u3066\\u3053\\u308C\\u307E\\u3067\\u306E\\u30EC\\u30AF\\u30C1\\u30E3\\u30FC\\u3067\\u5B9F\\u88C5\\u3057\\u305F\\u3088\\u3046\\u306A\\u30AB\\u30A6\\u30F3\\u30BF\\u30FC\\u3092\\u4F5C\\u6210\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"));\n};\nvar CountResult = function CountResult( /* propsを定義 */) {\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 41\n    }\n  });\n};\nvar CountUpdate = function CountUpdate( /* propsを定義 */\n) {\n  var countUp = function countUp() {\n    /* countに1追加 */\n  };\n  var countDown = function countDown() {\n    /* countから1マイナス */\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: countUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: countDown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"-\"));\n};\nexport default Example;","map":{"version":3,"names":["Example","CountResult","CountUpdate","countUp","countDown"],"sources":["/Users/hagi/ProgramingProject/TypeScriptProjects/react-guide-material/05_state_and_event/src/090_practice_state_props/start/Example.js"],"sourcesContent":["\nconst Example = () => {\n  return (\n    <>\n      <h3>練習問題</h3>\n      <p>カウントの更新（CountUpdate）と表示（CountResult）を別のコンポーネントに分離してください。Exampleコンポーネント内で現在のカウントの値を管理するstateを一つ定義してこれまでのレクチャーで実装したようなカウンターを作成してください。</p>\n      {/* このコメントアウトを外して利用！\n        <CountResult title=\"カウント\" />\n        <CountUpdate /> \n      */}\n    </>\n  );\n};\nconst CountResult = (/* propsを定義 */) => <h3>{/* propsのtitleとcountの値を表示 */}</h3>\n\nconst CountUpdate = (/* propsを定義 */) => {\n  const countUp = () => {\n    /* countに1追加 */\n  };\n  const countDown = () => {\n    /* countから1マイナス */ \n  };\n  return (\n    <>\n      <button onClick={countUp}>+</button>\n      <button onClick={countDown}>-</button>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AACA,IAAMA,OAAO,GAAG,SAAVA,OAAO,GAAS;EACpB,oBACE,uDACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAa,eACb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8mBAA0I,CAKzI;AAEP,CAAC;AACD,IAAMC,WAAW,GAAG,SAAdA,WAAW,EAAI;EAAA,oBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAuC;AAAA;AAE/E,IAAMC,WAAW,GAAG,SAAdA,WAAW,EAAI;AAAA,EAAmB;EACtC,IAAMC,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpB;EAAA,CACD;EACD,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;IACtB;EAAA,CACD;EACD,oBACE,uDACE;IAAQ,OAAO,EAAED,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAW,eACpC;IAAQ,OAAO,EAAEC,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAW,CACrC;AAEP,CAAC;AAED,eAAeJ,OAAO"},"metadata":{},"sourceType":"module"}