{"ast":null,"code":"// import \"./App.css\";\n// import React from \"react\";\n\n// import { Suspense, useState, useEffect, lazy, StrictMode } from \"react\";\n// import BaseErrorBoundary from \"./BaseErrorBoundary\";\n\n// const STORAGE_KEY = \"rcg-current-lec-index\";\n\n// const DynamicLoader = ({ component }) => {\n//   const LazyComponent = lazy(() => import(`${component}`));\n//   return (\n//     <BaseErrorBoundary>\n//       <Suspense fallback={<div>Loading...</div>}>\n//         <LazyComponent />\n//       </Suspense>\n//     </BaseErrorBoundary>\n//   );\n// };\n\n// const App = ({ lectures }) => {\n//   /**\n//    * ローカルストレージより画面復帰時のレクチャーインデックスを取得\n//    */\n//   let restoredLecIndx = localStorage.getItem(STORAGE_KEY) ?? 0;\n//   restoredLecIndx = restoredLecIndx < lectures.length ? restoredLecIndx : 0;\n//   const [lecIndex, setLecIndex] = useState(restoredLecIndx);\n\n//   /**\n//    * レクチャーID（フォルダ名）を取得\n//    */\n//   const lecId = lectures[lecIndex];\n\n//   /**\n//    * プルダウン変更時処理\n//    */\n//   const handleChange = (event) => setLecIndex(event.target.value);\n//   useEffect(() => localStorage.setItem(STORAGE_KEY, lecIndex), [lecIndex]);\n\n//   return (\n//     <div className=\"App\">\n//       <select className=\"App-select\" value={lecIndex} onChange={handleChange}>\n//         {lectures.map((id, index) => (\n//           <option key={id} value={index}>\n//             {id}\n//           </option>\n//         ))}\n//       </select>\n\n//       <div className=\"App-start\">\n//         <h2>練習コード（start）</h2>\n//         <DynamicLoader component={`./${lecId}/start/Example`} />\n//       </div>\n//       <div className=\"App-end\">\n//         <h2>完成コード（end）</h2>\n//         <DynamicLoader component={`./${lecId}/end/Example`} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/hagi/ProgramingProject/TypeScriptProjects/react-guide-material/05_state_and_event/src/App.js"],"sourcesContent":["// import \"./App.css\";\n// import React from \"react\";\n\n// import { Suspense, useState, useEffect, lazy, StrictMode } from \"react\";\n// import BaseErrorBoundary from \"./BaseErrorBoundary\";\n\n// const STORAGE_KEY = \"rcg-current-lec-index\";\n\n// const DynamicLoader = ({ component }) => {\n//   const LazyComponent = lazy(() => import(`${component}`));\n//   return (\n//     <BaseErrorBoundary>\n//       <Suspense fallback={<div>Loading...</div>}>\n//         <LazyComponent />\n//       </Suspense>\n//     </BaseErrorBoundary>\n//   );\n// };\n\n// const App = ({ lectures }) => {\n//   /**\n//    * ローカルストレージより画面復帰時のレクチャーインデックスを取得\n//    */\n//   let restoredLecIndx = localStorage.getItem(STORAGE_KEY) ?? 0;\n//   restoredLecIndx = restoredLecIndx < lectures.length ? restoredLecIndx : 0;\n//   const [lecIndex, setLecIndex] = useState(restoredLecIndx);\n\n//   /**\n//    * レクチャーID（フォルダ名）を取得\n//    */\n//   const lecId = lectures[lecIndex];\n\n//   /**\n//    * プルダウン変更時処理\n//    */\n//   const handleChange = (event) => setLecIndex(event.target.value);\n//   useEffect(() => localStorage.setItem(STORAGE_KEY, lecIndex), [lecIndex]);\n\n//   return (\n//     <div className=\"App\">\n//       <select className=\"App-select\" value={lecIndex} onChange={handleChange}>\n//         {lectures.map((id, index) => (\n//           <option key={id} value={index}>\n//             {id}\n//           </option>\n//         ))}\n//       </select>\n\n//       <div className=\"App-start\">\n//         <h2>練習コード（start）</h2>\n//         <DynamicLoader component={`./${lecId}/start/Example`} />\n//       </div>\n//       <div className=\"App-end\">\n//         <h2>完成コード（end）</h2>\n//         <DynamicLoader component={`./${lecId}/end/Example`} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}