{"ast":null,"code":"import _toConsumableArray from \"/Users/hagi/ProgramingProject/TypeScriptProjects/react-guide-material/05_state_and_event/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/hagi/ProgramingProject/TypeScriptProjects/react-guide-material/05_state_and_event/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/hagi/ProgramingProject/TypeScriptProjects/react-guide-material/05_state_and_event/src/064_state_array/end/Example.js\";\nimport { useState } from \"react\";\n\n// POINT 配列のstateの扱い方\nvar Example = function Example() {\n  var _useState = useState([1, 2, 3, 4, 5]),\n    _useState2 = _slicedToArray(_useState, 2),\n    nums = _useState2[0],\n    setNums = _useState2[1];\n  var shuffle = function shuffle() {\n    var newNums = _toConsumableArray(nums);\n    var lastVal = newNums.pop();\n    newNums.unshift(lastVal);\n    setNums(newNums);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, nums), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: shuffle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"shuffle\"));\n};\nexport default Example;","map":{"version":3,"names":["useState","Example","nums","setNums","shuffle","newNums","lastVal","pop","unshift"],"sources":["/Users/hagi/ProgramingProject/TypeScriptProjects/react-guide-material/05_state_and_event/src/064_state_array/end/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\n// POINT 配列のstateの扱い方\nconst Example = () => {\n  const [nums, setNums] = useState([1, 2, 3, 4, 5]);\n\n  const shuffle = () => {\n    const newNums = [ ...nums ];\n    const lastVal = newNums.pop();\n    newNums.unshift(lastVal);\n    setNums(newNums);\n  }\n  return (\n    <>\n      <h1>{nums}</h1>\n      <button onClick={shuffle}>shuffle</button>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;;;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAO,GAAS;EAAA,gBACID,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAAA;IAA1CE,IAAI;IAAEC,OAAO;EAEpB,IAAMC,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpB,IAAMC,OAAO,sBAAQH,IAAI,CAAE;IAC3B,IAAMI,OAAO,GAAGD,OAAO,CAACE,GAAG,EAAE;IAC7BF,OAAO,CAACG,OAAO,CAACF,OAAO,CAAC;IACxBH,OAAO,CAACE,OAAO,CAAC;EAClB,CAAC;EACD,oBACE,uDACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKH,IAAI,CAAM,eACf;IAAQ,OAAO,EAAEE,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAiB,CACzC;AAEP,CAAC;AAED,eAAeH,OAAO"},"metadata":{},"sourceType":"module"}